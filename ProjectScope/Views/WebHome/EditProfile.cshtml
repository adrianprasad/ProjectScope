@using ProjectScope.ViewModels
@{
    Layout = "_Layout";
}

<style>
    .container {
        max-width: 800px;
        margin: auto;
        padding: 0 15px;
    }

    /* Form styles */
    .registration {
        background-color: #f8f9fa;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    }

    .h2 {
        color: #333;
    }

    }

    /* Label styles */
    .form-floating label {
        margin-top: 10px;
        color: #666;
    }

    /* Button styles */
    .btn {
        padding: 10px 20px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

        .btn:hover {
            background-color: #0056b3;
        }
</style>

@model RegistrationViewModel

<div class="container mt-3 registration">
    <div class="h2 text-center mb-3">
        Edit Profile
    </div>
    <form asp-action="EditProfile" asp-controller="WebHome" method="post" enctype="multipart/form-data">
        @* First Name *@
        
        <div class="form-floating mb-4">
            <input asp-for="FirstName" class="form-control" value="@Model.FirstName" />
            <label class="form-label" asp-for="FirstName"></label>
            @* <span class="text-danger" asp-validation-for="FirstName"></span> *@
        </div>

        @* Last Name *@
        <div class="form-floating mb-4">
            <input asp-for="LastName" class="form-control" value="@Model.LastName" />
            <label class="form-label" asp-for="LastName"></label>
            @* <span class="text-danger" asp-validation-for="LastName"></span> *@
        </div>
        @* Gender *@
        <div class="form-floating mb-4">
            <div class="form-check form-check-inline">
                <label class="form-check-label">Gender : </label>
            </div>
            @if (Model.Gender =="Male")
            {
                <div class="form-check form-check-inline">
                    <input asp-for="Gender" class="form-check-input" type="radio" id="Male" value="Male" selected>
                    <label class="form-check-label">Male</label>
                </div>
           
            
            <div class="form-check form-check-inline">
                <input asp-for="Gender" class="form-check-input" type="radio" id="Female" value="Female">
                <label class="form-check-label">Female</label>
            </div>
            }
            else
            {
                <div class="form-check form-check-inline">
                    <input asp-for="Gender" class="form-check-input" type="radio" id="Male" value="Male">
                    <label class="form-check-label">Male</label>
                </div>


                <div class="form-check form-check-inline">
                    <input asp-for="Gender" class="form-check-input" type="radio" id="Female" value="Female" selected>
                    <label class="form-check-label">Female</label>
                </div>
            }
            @* <span class="text-danger" asp-validation-for="Gender"></span> *@
        </div>

        @* Date of Birth *@
        <div class="form-floating mb-4">
            <input type="date" name="DateofBirth" id="DateofBirth" class="form-control" value="@Model.DateofBirth.ToString("yyyy-MM-dd")" />
            <label class="form-label" asp-for="DateofBirth"></label>
            @* <span class="text-danger" asp-validation-for="DateofBirth"></span> *@
        </div>


        @* Email *@
        <div class="form-floating mb-4">
            <input asp-for="Email" class="form-control" value="@Model.Email" />
            <label class="form-label" asp-for="Email"></label>
            @* <span class="text-danger" asp-validation-for="Email"></span> *@
        </div>
        @* Phone Number *@
        <div class="form-floating mb-4">
            <input asp-for="Phone" class="form-control" value="@Model.Phone" />
            <label class="form-label" asp-for="Phone"></label>
            @* <span class="text-danger" asp-validation-for="Phone"></span> *@
        </div>
        @* Country *@
        <div class="form-floating mb-4">
            <select class="form-control" id="country" onchange="updateStates()" asp-for="Country">
                <option value="">Select Country</option>
                <option value="India">India</option>
                <option value="USA">USA</option>
                <option value="Germany">Germany</option>
                <option value="Australia">Australia</option>
                <option value="UK">UK</option>
            </select>
            <label class="form-label" asp-for="Country"></label>
            @* <span class="text-danger" asp-validation-for="Country"></span> *@
        </div>

        @* State *@
        <div class="form-floating mb-4">
            <select class="form-control" id="state" onchange="updateCities()" asp-for="State">
                <option value="">Select State</option>
                <option value="@Model.State">@Model.State</option>

            </select>
            <label class="form-label" asp-for="State"></label>
            @* <span class="text-danger" asp-validation-for="State"></span> *@

        </div>

        @* City *@
        <div class="form-floating mb-4">
            <select class="form-control" id="city" onchange="updateCity()" asp-for="City">
                <option value="">Select City</option>
                <option value="@Model.City">@Model.City</option>

            </select>
            <label class="form-label" asp-for="City"></label>
            @* <span class="text-danger" asp-validation-for="City"></span> *@
        </div>

        <div class="form-floating mb-4">
            <div class="form-check form-check-inline">
                <label class="form-check-label">Hobbies : </label>
            </div>
            <div class="form-check form-check-inline">
                <input type="checkbox" id="Gaming" name="Hobbies" value="Gaming" @(Model.Hobbies == "Gaming" ? "checked" : "")>
                <label class="form-check-label" for="Gaming">Gaming</label>
            </div>
            <div class="form-check form-check-inline">
                <input type="checkbox" id="Singing" name="Hobbies" value="Singing" @(Model.Hobbies == "Singing" ? "checked" : "")>
                <label class="form-check-label" for="Singing">Singing</label>
            </div>


            @* <span class="text-danger" asp-validation-for="Hobbies"></span> *@
        </div>

        <div>
        </div>
        @* <div class="form-floating mb-4">
            <img class="image" src="/images/Avatar/@Model.Avatar" />

            <input class="form-control" type="file" name="Image" />
            <label class="form-label" for="Image"></label>
            <span class="text-danger"></span>
        </div> *@
        <div class="form-floating mb-4">
            <input type="submit" class="btn btn-outline-primary" value="Save Changes" />
        </div>
    </form>
</div>
@section Scripts {
    @await Html.PartialAsync("/Views/Shared/_ValidationScriptsPartial.cshtml")
    <script>
        $.validator.methods.range = function (value, element, param) {
            if ($(element).attr('id') == "DateofBirth") {
                var min = $(element).attr('data-val-range-min');
                var max = $(element).attr('data-val-range-max');
                var date = new Date(value).getTime();
                var minDate = new Date(min).getTime();
                var maxDate = new Date(max).getTime();
                console.log(minDate + " | " + maxDate + " | " + date);
                return this.optional(element) || (date >= minDate && date <= maxDate);
            }
            return this.optional(element) || (value >= param[0] && value <= param[1]);
        }

        const stateData = {
            India: ["Kerala", "Tamil Nadu", "Karnataka", "Gujarat", "Rajasthan"],
            USA: ["New York", "California", "Texas", "Florida"],
            Germany: ["Berlin", "Hamburg", "Munich", "Cologne"],
            Australia: ["Sydney", "Melbourne", "Brisbane", "Perth"],
            UK: ["London", "Manchester", "Birmingham", "Edinburgh"]
        };

        function updateStates() {
            const country = document.getElementById("country").value;
            const stateDropdown = document.getElementById("state");

            stateDropdown.innerHTML = "<option value=''>Select-Option</option>";

            if (country in stateData) {
                stateData[country].forEach(state => {
                    const option = document.createElement("option");
                    option.text = state;
                    option.value = state;
                    stateDropdown.appendChild(option);
                });
            }
        }

        function updateCities() {
            const state = document.getElementById("state").value;
            const cityDropdown = document.getElementById("city");

            cityDropdown.innerHTML = "<option value=''>Select-City</option>";

            if (state === "Kerala") {
                const cities = ["Trivandrum", "Kollam", "Alappuzha", "Kottayam", "Cochin", "Thrissur", "Palakkad", "Kozhikode", "Kannur", "Idukki", "Kasargod", "Pathanamthitta", "Wayanad", "Malappuram"];
                cities.forEach(city => {
                    const option = document.createElement("option");
                    option.text = city;
                    option.value = city;
                    cityDropdown.appendChild(option);
                });
            } else if (state === "Tamil Nadu") {
                const cities = ["Chennai", "Coimbatore", "Madurai"];
                cities.forEach(city => {
                    const option = document.createElement("option");
                    option.text = city;
                    option.value = city;
                    cityDropdown.appendChild(option);
                });
            }
            else if (state === "Karnataka") {
                const cities = ["Banglore", "Uduppi", "Chitradurga"];
                cities.forEach(city => {
                    const option = document.createElement("option");
                    option.text = city;
                    option.value = city;
                    cityDropdown.appendChild(option);
                });
            }
            else if (state === "Karnataka") {
                const cities = ["Banglore", "Uduppi", "Chitradurga"];
                cities.forEach(city => {
                    const option = document.createElement("option");
                    option.text = city;
                    option.value = city;
                    cityDropdown.appendChild(option);
                });
            }
        }


    </script>
}
